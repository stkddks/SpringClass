package kr.or.kh;

public class Hi {

	public static void main(String[] args){
		MessageBean bean = new MessageBeankr();
		bean.call("KH정보교육원");
		bean = new MessageBeanEn();
		bean.call("KH정보교육원");
	}
}

// 면접질문Q. 스프링은 왜 사용하나요?? 

// 첫번째(ex02_0122)는 강한결합관계의 예시
// 두번째(kr.or.kh)는 약한결합관계의 예
// 인사하는 사이트가 필요한데
// 한국어와 영어로 인사하는 두가지가 필요한데
// 개발자는 얘네가 어떻게 연결되어있는지를 파악하지 않아도 개발자는 개발에 집중할 수 있게 해주는 것!(인터페이스를 쓰면)
// 강한결합은 개발에 집중못하고 고치는데 시간써야해 고생해야해(코드간의 의존성이 높아서 하나하나 다 바꿔줘야 한다)

// 스프링의 정확하게 쓰는 이유가 뭐냐?
// 의존관계가 중요 뽀인뜨!
// 강한결합이냐 약한 결합이냐! 강을 약으로 바꿔주는 것이 인터페이스이다.
// 약한결합관계를 만들어주는 키워드가 interface이고 얘를 상속이켜서 이용
// ||
// 생성자를 통해 객체를 받아 멤버변수에 대입하기만 하면 오브젝트를 변경 가능하게 해준다.
// 즉, 강한 결합에서 벗어나 약한 결합을 이루게 해준다.
// 이는 유지보수를 짱짱맨으로 만들어주는 지름길이다.

// 또 스프링과의 정확한 차이점이 무엇이냐! 
// IOC(공장의 개념)와 DI(객체를 주입하는 과정)이다! 라고 말하는게 가장 정확한 정답!!

// 이클립스의 스프링의 인터페이스의 다른점은 없다 똑같은 원리여
// 이클립스에서도 인터페이스를 써서 약한결합이 가능하지만 
// 스프링에서와의 차이는 IOC와 DI의 개념이 나오는 것이여!

// 강한결합 - 배터리 일체형 핸드폰
// 약한결합 - 배터리가 닳으면 배터리만 갈아끼면 된다! 의 의와 같다



